// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM4K.hdl
/**
 * Memory of 4K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    RAM512(in=in , load=rampart1 , address=address[0..8] , out=ram1);
    RAM512(in=in , load=rampart2 , address=address[0..8] , out=ram2);
    RAM512(in=in , load=rampart3 , address=address[0..8] , out=ram3);
    RAM512(in=in , load=rampart4 , address=address[0..8] , out=ram4);
    RAM512(in=in , load=rampart5 , address=address[0..8] , out=ram5);
    RAM512(in=in , load=rampart6 , address=address[0..8] , out=ram6);
    RAM512(in=in , load=rampart7 , address=address[0..8] , out=ram7);
    RAM512(in=in , load=rampart8 , address=address[0..8] , out=ram8);

    // lower 3 bits select register within ram8
    // upper select 3 bits which ram8 uses
    //  One fild is the register (address[0..2]) and the other is to select the upper bits
    Mux8Way16(a=ram1 , b=ram2 , c=ram3 , d=ram4,e=ram5,f=ram6,g=ram7,h=ram8, sel=address[9..11] , out=out);
    DMux8Way(in=load, sel=address[9..11], a=rampart1, b=rampart2, c=rampart3, d=rampart4,e=rampart5,f=rampart6,g=rampart7,h=rampart8);
}